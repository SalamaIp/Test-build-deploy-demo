pipeline {
    agent any

    stages {
        stage('Clone Repository') {
            steps {
                // Clone the GitHub repository
                git branch: 'main', credentialsId: 'GitHub-Test-Build-Deploy', url: 'https://github.com/SalamaIp/Test-build-deploy-demo.git'
            }
        }
        
        stage('Install Dependencies') {
            steps {
                // Install npm dependencies
                sh 'npm install'
            }
        }
        
        stage('Lint') {
            steps {
                // Run linting
                sh 'npm run lint'
            }
        }
        
        stage('Test') {
            steps {
                // Run tests
                sh 'npm test'
            }
        }
        
        stage('Build') {
            steps {
                // Build the project
                sh 'npm run build'
            }
        }

        stage('Stop Old Container') {
            steps {
                script {
                    // Stop and remove old container if it exists
                    try {
                        sh 'docker rm vuecontainer -f'
                    } catch (Exception e) {
                        echo 'No container to stop or remove'
                    }
                    try {
                        sh 'docker rmi vueimage'
                    } catch (Exception e) {
                        echo 'No image to remove'
                    }
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                // Build Docker image
                sh 'docker build -t vueimage .'
            }
        }
        
        stage('Run Docker Container') {
            steps {
                // Run Docker container
                sh 'docker run -d -p 3000:8080 --name vuecontainer vueimage'
            }
        }

    }
    /*
    post {
        always {
            script {
                try {
                    sh 'docker rm -f vuecontainer'
                } catch (Exception e) {
                    echo 'Container already removed or does not exist'
                }
            }
        }
    }
*/
}



        // stage('Push Docker Image') {
        //     steps {
        //         // Push Docker image to Docker Hub or Amazon ECR
        //         sh 'docker push yourimage:latest'
        //     }
        // }
        // stage('Deploy to AWS') {
        //     steps {
        //         // Deploy Docker image to AWS (ECS, Elastic Beanstalk, etc.)
        //         // Example command for ECS:
        //         sh 'aws ecs update-service --cluster yourcluster --service yourservice --force-new-deployment'
        //     }
        // }



